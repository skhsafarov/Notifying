// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notifying.Infrastructure;

#nullable disable

namespace Notifying.API.Migrations
{
    [DbContext(typeof(NotifyingContext))]
    [Migration("20240118110905_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Notifying.Domain.AggregatesModel.NotificationAggregate.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeOfSending")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Body1",
                            TimeOfSending = new DateTime(2024, 1, 18, 16, 22, 4, 361, DateTimeKind.Local).AddTicks(2963),
                            Title = "Title1"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Body2",
                            TimeOfSending = new DateTime(2024, 1, 18, 16, 15, 4, 361, DateTimeKind.Local).AddTicks(3046),
                            Title = "Title2"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Body3",
                            TimeOfSending = new DateTime(2024, 1, 18, 17, 25, 4, 361, DateTimeKind.Local).AddTicks(3052),
                            Title = "Title3"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Body4",
                            TimeOfSending = new DateTime(2024, 1, 18, 17, 16, 4, 361, DateTimeKind.Local).AddTicks(3056),
                            Title = "Title4"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Body5",
                            TimeOfSending = new DateTime(2024, 1, 18, 17, 36, 4, 361, DateTimeKind.Local).AddTicks(3061),
                            Title = "Title5"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Body6",
                            TimeOfSending = new DateTime(2024, 1, 18, 16, 38, 4, 361, DateTimeKind.Local).AddTicks(3065),
                            Title = "Title6"
                        },
                        new
                        {
                            Id = 7,
                            Body = "Body7",
                            TimeOfSending = new DateTime(2024, 1, 18, 17, 21, 4, 361, DateTimeKind.Local).AddTicks(3070),
                            Title = "Title7"
                        },
                        new
                        {
                            Id = 8,
                            Body = "Body8",
                            TimeOfSending = new DateTime(2024, 1, 18, 17, 44, 4, 361, DateTimeKind.Local).AddTicks(3075),
                            Title = "Title8"
                        },
                        new
                        {
                            Id = 9,
                            Body = "Body9",
                            TimeOfSending = new DateTime(2024, 1, 18, 16, 18, 4, 361, DateTimeKind.Local).AddTicks(3148),
                            Title = "Title9"
                        },
                        new
                        {
                            Id = 10,
                            Body = "Body10",
                            TimeOfSending = new DateTime(2024, 1, 18, 16, 53, 4, 361, DateTimeKind.Local).AddTicks(3154),
                            Title = "Title10"
                        });
                });

            modelBuilder.Entity("Notifying.Domain.AggregatesModel.NotificationAggregate.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NotificationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeOfReading")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("Recipients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            IsSent = false,
                            NotificationId = 1,
                            TimeOfReading = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Notifying.Domain.AggregatesModel.NotificationAggregate.Notification", b =>
                {
                    b.OwnsOne("Notifying.Domain.AggregatesModel.NotificationAggregate.Attachment", "AttachedFiles", b1 =>
                        {
                            b1.Property<int>("NotificationId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("JsonData")
                                .HasColumnType("TEXT");

                            b1.HasKey("NotificationId");

                            b1.ToTable("Notifications");

                            b1.WithOwner()
                                .HasForeignKey("NotificationId");

                            b1.HasData(
                                new
                                {
                                    NotificationId = 1,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 2,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 3,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 4,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 5,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 6,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 7,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 8,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 9,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                },
                                new
                                {
                                    NotificationId = 10,
                                    JsonData = "[\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"]"
                                });
                        });

                    b.Navigation("AttachedFiles")
                        .IsRequired();
                });

            modelBuilder.Entity("Notifying.Domain.AggregatesModel.NotificationAggregate.Recipient", b =>
                {
                    b.HasOne("Notifying.Domain.AggregatesModel.NotificationAggregate.Notification", "Notification")
                        .WithMany("Recipients")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Notifying.Domain.AggregatesModel.NotificationAggregate.Notification", b =>
                {
                    b.Navigation("Recipients");
                });
#pragma warning restore 612, 618
        }
    }
}
